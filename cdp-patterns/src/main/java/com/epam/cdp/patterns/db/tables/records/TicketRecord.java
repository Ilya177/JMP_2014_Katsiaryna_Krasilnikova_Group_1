/**
 * This class is generated by jOOQ
 */
package com.epam.cdp.patterns.db.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.5.2"
        },
        comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TicketRecord extends org.jooq.impl.UpdatableRecordImpl<com.epam.cdp.patterns.db.tables.records.TicketRecord> implements org.jooq.Record5<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long> {

    private static final long serialVersionUID = 973346928;

    /**
     * Setter for <code>cinema.ticket.id</code>.
     */
    public void setId(java.lang.Long value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>cinema.ticket.id</code>.
     */
    public java.lang.Long getId() {
        return (java.lang.Long) getValue(0);
    }

    /**
     * Setter for <code>cinema.ticket.price</code>.
     */
    public void setPrice(java.lang.Long value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>cinema.ticket.price</code>.
     */
    public java.lang.Long getPrice() {
        return (java.lang.Long) getValue(1);
    }

    /**
     * Setter for <code>cinema.ticket.orderId</code>.
     */
    public void setOrderid(java.lang.Long value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>cinema.ticket.orderId</code>.
     */
    public java.lang.Long getOrderid() {
        return (java.lang.Long) getValue(2);
    }

    /**
     * Setter for <code>cinema.ticket.placeId</code>.
     */
    public void setPlaceid(java.lang.Long value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>cinema.ticket.placeId</code>.
     */
    public java.lang.Long getPlaceid() {
        return (java.lang.Long) getValue(3);
    }

    /**
     * Setter for <code>cinema.ticket.SeanceId</code>.
     */
    public void setSeanceid(java.lang.Long value) {
        setValue(4, value);
    }

    /**
     * Getter for <code>cinema.ticket.SeanceId</code>.
     */
    public java.lang.Long getSeanceid() {
        return (java.lang.Long) getValue(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Record1<java.lang.Long> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row5<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row5<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long> valuesRow() {
        return (org.jooq.Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field1() {
        return com.epam.cdp.patterns.db.tables.Ticket.TICKET.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field2() {
        return com.epam.cdp.patterns.db.tables.Ticket.TICKET.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field3() {
        return com.epam.cdp.patterns.db.tables.Ticket.TICKET.ORDERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field4() {
        return com.epam.cdp.patterns.db.tables.Ticket.TICKET.PLACEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field5() {
        return com.epam.cdp.patterns.db.tables.Ticket.TICKET.SEANCEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value2() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value3() {
        return getOrderid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value4() {
        return getPlaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value5() {
        return getSeanceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value1(java.lang.Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value2(java.lang.Long value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value3(java.lang.Long value) {
        setOrderid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value4(java.lang.Long value) {
        setPlaceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value5(java.lang.Long value) {
        setSeanceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord values(java.lang.Long value1, java.lang.Long value2, java.lang.Long value3, java.lang.Long value4, java.lang.Long value5) {
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketRecord
     */
    public TicketRecord() {
        super(com.epam.cdp.patterns.db.tables.Ticket.TICKET);
    }

    /**
     * Create a detached, initialised TicketRecord
     */
    public TicketRecord(java.lang.Long id, java.lang.Long price, java.lang.Long orderid, java.lang.Long placeid, java.lang.Long seanceid) {
        super(com.epam.cdp.patterns.db.tables.Ticket.TICKET);

        setValue(0, id);
        setValue(1, price);
        setValue(2, orderid);
        setValue(3, placeid);
        setValue(4, seanceid);
    }
}
